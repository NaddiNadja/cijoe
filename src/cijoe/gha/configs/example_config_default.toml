# GitHub Action Runner(s)
[gha.runner]
# You only need to provide a download-url if you do NOT want to download
# the latest x86 version, e.g. you want arm or another version.
#url.download = "https://github.com/actions/runner/releases/download/<VERSION>/actions-runner-linux-<ARCH>-<VERSION>.tar.gz"

# The repository you want to add the runner to is mandatory, provide it below
url.repository = "https://github.com/refenv/for-testing-cijoe-gha"
user = "devuser"
home = "/home/devuser"
nameprefix = "devuser"
count = 1
labels = ["my", "label"]


[cijoe.transport.qemu_guest]
username = "root"
password = "root"
hostname = "localhost"
port = 4200

[cijoe.workflow]
fail_fast=true

# Used by: the qemu.*.py scripts
[qemu]
img_bin = "qemu-img"

[qemu.systems.aarch64]
bin = "qemu-system-aarch64"

[qemu.systems.x86_64]
bin = "qemu-system-x86_64"

# Used by: qemu.guest_initialize.py, qemu.guest_start.py, and qemu.guest_kill.py
[qemu.guests.generic-bios-kvm-x86_64]
path = "{{ local.env.HOME }}/guests/generic-bios-kvm-x86_64"

# Label of the qemu-system emulerator to use; see "qemu.systems"
system_label = "x86_64"

# Name of the system_image to use; see "system_imaging.images"
# Uncomment here, or set as workflow-argument when using "qemu.guest_initialize"
#system_image_name = "debian-12-x86_64"

# Keyword arguments: joined onto the form: "-cpu host -smp 4 -m 4" etc.
system_args.kwa = {cpu = "host", smp = 4, m = "6G", accel = "kvm"}

# Raw arguments: passed without modification to qemu-system-{arch}
system_args.raw = """\
-M "type=q35,kernel_irqchip=split" \
-device "intel-iommu,pt=on,intremap=on" \
"""

# TCP_FORWARD: Setup ssh forward from host to guest
#
# This is is a "special" argument, managed by the cijoe qemu-wrapper,
# specifically by 'guest.start_guest()'
system_args.tcp_forward = {host = 4200, guest = 22}

# HOST_SHARE: Sares the given folder with the guest via 9p
#
# The configuration example, below shares your home folder, if you do not want
# this, then comment it out
#
# This is is a "special" argument, managed by the cijoe qemu-wrapper,
# specifically by 'guest.start_guest()'
system_args.host_share = "{{ local.env.HOME }}"

[system-imaging.images.debian-12-x86_64]
system_label = "x86_64"

cloud.url = "https://cloud.debian.org/images/cloud/bookworm/daily/latest/debian-12-generic-amd64-daily.qcow2"
cloud.path = "{{ local.env.HOME }}/system_imaging/cloud/debian-12-generic-amd64-daily.qcow2"
cloud.metadata_path = "{{ resources.auxiliary['system_imaging.cloudinit-linux-common-metadata'] }}"
cloud.userdata_path = "{{ resources.auxiliary['system_imaging.cloudinit-linux-common-userdata'] }}"

disk.path = "{{ local.env.HOME }}/system_imaging/disk/debian-12-x86_64.qcow2"
disk.url = "https://cijoe-system-imaging.s3.eu-central-003.backblazeb2.com/disk/debian-12-x86_64.qcow2"
disk.url_checksum = "https://cijoe-system-imaging.s3.eu-central-003.backblazeb2.com/disk/debian-12-x86_64.qcow2"

docker.url = "ghcr.io/refenv/debian-12-x86_64:main"
docker.name = "debian-12-x86_64"
docker.tag = "example"